<?php

/**
 * Implementation of hook_install().
 */
function wysiwyg_mathjax_install() {
  drupal_install_schema('wysiwyg_mathjax');
  _wysiwyg_mathjax_install_styles_if_missing();
}

/**
 * Implementation of hook_uninstall().
 */
function wysiwyg_mathjax_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('wysiwyg_mathjax');
  // Remove variables.
  db_query("DELETE FROM {variable} WHERE name LIKE 'wysiwyg_mathjax_%%'");

}

function _wysiwyg_mathjax_install_styles_if_missing() {
  $value = variable_get('wysiwyg_mathjax_styles', FALSE);
  if ($value == FALSE) {
    variable_set('wysiwyg_mathjax_styles', 'Spacing 20px Border=mathjax_styles_spacing_20_black_border\rBlack Border=mathjax_styles_black_border\rSpacing 5px=mathjax_styles_spacing_5\rSpacing 10px=mathjax_styles_spacing_10');
  }
}
/**
 * Implementation of hook_schema().
 */
function wysiwyg_mathjax_schema() {
  $schema = array();
  _wysiwyg_mathjax_inline_table($schema);
  return $schema;
}

function _wysiwyg_mathjax_inline_table(&$schema) {
  $schema['wysiwyg_mathjax_entity'] = array(
    'description' => 'Stores the inline arguments for a specific formula used inline',
    'fields' => array(
      'iid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The inline ID of the field, defined by the database.',
        'no export' => TRUE,
      ),
      'fid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: The {files}.fid.',
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {node}.nid associated with the uploaded file.',
      ),
      'cid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: The {comment}.cid associated with the uploaded file.',
      ),
      'temporary' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Is this file temporary.',
      ),
      'style' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Current selected style to show the formula with.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Formula title.',
      ),
      'alignment' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Defines the alignment of the formula',
      ),
    ),
    'primary key' => array('iid')
  );

$schema['wysiwyg_mathjax_entity_revision'] = array(
    'description' => 'Stores the inline arguments for a specific formula used inline',
    'fields' => array(
      'iid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The inline ID of the field, defined by the database.',
        'no export' => TRUE,
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: The {node}.vid associated with the uploaded file.',
      ),

    ),
    'primary key' => array('vid', 'iid'),
    'indexes' => array(
      'iid' => array('iid'),
      'vid' => array('vid'),
    ),
  );
}

function wysiwyg_mathjax_update_6200() {
  $schema = array();
  _wysiwyg_mathjax_inline_table($schema);
  $ret = array();
  db_create_table($ret, 'wysiwyg_mathjax_entity', $schema['wysiwyg_mathjax_entity']);
  db_create_table($ret, 'wysiwyg_mathjax_entity_revision', $schema['wysiwyg_mathjax_entity_revision']);
  return $ret;
}

function wysiwyg_mathjax_update_6201() {
  $value = variable_get('wysiwyg_mathjax_styles', FALSE);
  if ($value !== FALSE) {
    variable_set('wysiwyg_mathjax_styles', str_replace(';', "\r", $value));
  }
  return array();
}

function wysiwyg_mathjax_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    require_once('wysiwyg_mathjax.module');
  }
  return $requirements;
}
